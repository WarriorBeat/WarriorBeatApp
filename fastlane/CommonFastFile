
# Common Functions and Requirements
# across Android/iOS Fastfiles

# Require Env
fastlane_require 'dotenv'

# Path Constants
ROOT = File.expand_path('../../', Dir.pwd).freeze
PACKAGE_JSON = File.join(ROOT, 'package.json').freeze
SECRET_SH = File.join(ROOT, 'fastlane/load_secret.sh').freeze

ANDROID_PATH = File.join(ROOT, 'android').freeze
IOS_PATH = File.join(ROOT, 'ios').freeze

APPCENTER_ANDROIDCONFIG = File.join(ANDROID_PATH, 'app/src/main/assets/appcenter-config.json')
APPCENTER_IOSCONFIG = File.join(IOS_PATH, 'AppCenter-Config.plist')

# Version Constants
ANDROID_APP_GRADLE = File.join(ANDROID_PATH, 'app/build.gradle')
VERSION = get_version_name(
  gradle_file_path: ANDROID_APP_GRADLE,
  ext_constant_name: "versionName"
)

# Loads Env Variables by build type 
def getEnv(buildType)
  Dotenv.load(File.join(Dir.pwd, '.env'))
  Dotenv.load('%s/.env.%s' % [ROOT, buildType])
end

# Inject/Remove Secret from AppCenter
def injectAppcenter(platform, path, clean=false)
  if clean
    return sh("%s %s --clean %s" % [SECRET_SH, platform, path])
  else
    return sh("%s %s %s" % [SECRET_SH, platform, path])
  end
end

# Retrieve Release notes from Changelog
def getReleaseNotes()
  prev_version = sh("git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`")
  notes = sh('sed -n "/$(echo v%s)/,/$(echo %s)/ p" $CHANGELOG_PATH | head -n -2' % [VERSION, prev_version])
  return notes
end
